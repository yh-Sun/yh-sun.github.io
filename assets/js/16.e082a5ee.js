(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{741:function(t,s,e){"use strict";e.r(s);var a=e(105),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"redis部署"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis部署"}},[t._v("#")]),t._v(" redis部署")]),t._v(" "),e("blockquote",[e("p",[t._v("https://blog.csdn.net/u010177412/article/details/81780844")])]),t._v(" "),e("h3",{attrs:{id:"上传安装包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#上传安装包"}},[t._v("#")]),t._v(" 上传安装包")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("scp ~/Downloads/deploy/redis-5.0.4.tar.gz root@10.1.1.100:/root/\n")])])]),e("h3",{attrs:{id:"解压安装包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解压安装包"}},[t._v("#")]),t._v(" 解压安装包")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("tar -xvf redis-5.0.4.tar.gz\n")])])]),e("h3",{attrs:{id:"安装redis"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装redis"}},[t._v("#")]),t._v(" 安装redis")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 进⼊目录\ncd redis\n# 编译\nmake\n# 安装\nmake install\n")])])]),e("h3",{attrs:{id:"配置开机启动文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置开机启动文件"}},[t._v("#")]),t._v(" 配置开机启动文件")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('vim /etc/init.d/redis_6379\n\n---------------------------------redis_6379内容----------------------------------------\n#!/bin/sh\n#\n# Simple Redis init.d script conceived to work on Linux systems\n# chkconfig: 2345 90 10\n# description: Redis is a persistent key-value database\n# as it does use of the /proc filesystem.\n\nREDISPORT=6379\n# redis-server命令路路径\nEXEC=/usr/local/bin/redis-server\n# redis-cli命令路路径\nCLIEXEC=/usr/local/bin/redis-cli\n\nPIDFILE=/var/run/redis_${REDISPORT}.pid\nCONF="/etc/redis/${REDISPORT}.conf"\n\ncase "$1" in\n\tstart)\n\t\tif [ -f $PIDFILE ]\n\t\tthen\n\t\t\techo "$PIDFILE exists, process is already running or crashed"\n\t\telse\n\t\t\techo "Starting Redis server..."\n\t\t\t$EXEC $CONF\n\t\tfi\n\t\t;;\n\tstop)\n    \tif [ ! -f $PIDFILE ]\n\t\tthen\n        \techo "$PIDFILE does not exist, process is not running"\n\t\telse\n\t\t\tPID=$(cat $PIDFILE)\n            echo "Stopping ..."\n            $CLIEXEC -p $REDISPORT shutdown\n            while [ -x /proc/${PID} ]\n            do\n\t\t\t\techo "Waiting for Redis to shutdown ..."\n\t\t\t\tsleep 1\n            done\n            echo "Redis stopped"\n        fi\n        ;;\n\t*)\n\t\techo "Please use start or stop as first argument"\n\t\t;;\n\tesac\n---------------------------------redis_6379内容----------------------------------------\n')])])]),e("h3",{attrs:{id:"设置开机执行redis自启脚本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置开机执行redis自启脚本"}},[t._v("#")]),t._v(" 设置开机执行redis自启脚本")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("chmod u+x /etc/init.d/redis_6479\ncd /etc/init.d/\nchkconfig redis_6379 on\n")])])]),e("h3",{attrs:{id:"创建redis持久化文文件夹"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建redis持久化文文件夹"}},[t._v("#")]),t._v(" 创建redis持久化⽂文件夹")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("mkdir /var/redis/6379\n")])])]),e("h3",{attrs:{id:"配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),e("blockquote",[e("p",[t._v("cp /usr/local/src/redis-3.2.12/redis.conf /etc/redis/6379.conf")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 注释掉它，以便便让外⽹网访问\n# bind 127.0.0.1\n# 关闭保护模式\nprotected-mode no\n# Redis默认不不是以守护进程的⽅方式运⾏行行，可以通过该配置项修改，使⽤用yes启⽤用守护进程\n# 启⽤用守护进程后， Redis会把pid写到⼀一个pidfile中，在/var/run/redis.pid\ndaemonize yes\n# 当Redis以守护进程⽅方式运⾏行行时， Redis默认会把pid写⼊入/var/run/redis.pid⽂文件，可以通过pidfile指定\npidfile /var/run/redis_6379.pid\n# 指定Redis监听端⼝口，默认端⼝口为6379\n# 如果指定0端⼝口，表示Redis不不监听TCP连接\nport 6379\n# ⼯工作⽬目录.\n# 指定本地数据库存放⽬目录，⽂文件名由上⼀一个dbfilename配置项指定\n#\n# Also the Append Only File will be created inside this directory.\n#\n# 注意，这⾥里里只能指定⼀一个⽬目录，不不能指定⽂文件名\ndir /var/redis/6379\n# 密码\n    requirepass e297b8716b6c121f671194823dd8dfb0b99a951d43874e298d863c8f89982d90\n")])])]),e("h3",{attrs:{id:"启动redis"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动redis"}},[t._v("#")]),t._v(" 启动redis")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("1.service redis_6379 start\n2./usr/local/redis/bin/redis-server /usr/local/redis/etc/redis.conf\n")])])]),e("h3",{attrs:{id:"_3-todo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-todo"}},[t._v("#")]),t._v(" 3.* TODO：")]),t._v(" "),e("h4",{attrs:{id:"_3-1-开机启动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-开机启动"}},[t._v("#")]),t._v(" 3.*.1 开机启动")]),t._v(" "),e("p",[t._v("https://www.cnblogs.com/M87-A/p/11468396.html")]),t._v(" "),e("h4",{attrs:{id:"_3-2-持久化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-持久化"}},[t._v("#")]),t._v(" 3.*.2 持久化")]),t._v(" "),e("p",[t._v("https://www.cnblogs.com/dong-/p/10088695.html")])])}),[],!1,null,null,null);s.default=r.exports}}]);