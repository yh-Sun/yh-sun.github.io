(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{744:function(t,s,a){"use strict";a.r(s);var n=a(105),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"引言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引言"}},[t._v("#")]),t._v(" 引言")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("在很长的一部分时间里，生产环境的发版方式都采用jenkins"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("gitlab打包，并使用ssh推送到对应的服务器；但是如果公司对ssh严格限制的话，就只能另辟蹊径了。由于Salt的资料很少，GitHub上高阶的issues也很难看懂，所以本文将描述实施Salt的经历、以及踩过的坑；\n")])])]),a("blockquote",[a("p",[t._v("注：后续接触更规范的部署方案，将会第一时间更新博文...")])]),t._v(" "),a("h3",{attrs:{id:"参考文献"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),a("blockquote",[a("p",[t._v("https://www.cnblogs.com/yanjieli/p/10864648.html")])]),t._v(" "),a("ul",[a("li",[t._v("Saltstack原理")])]),t._v(" "),a("div",{staticClass:"language-vbscript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Salt使用server-agent通信模型，服务端组件被称为Salt master，agent被称为Salt minion\nSalt master主要负责向Salt minions发送命令，然后聚合并显示这些命令的结果。一个Salt master可以管理多个minion系统\nSalt server与Salt minion通信的连接由Salt minion发起，这也意味着Salt minion上不需要打开任何传入端口（从而减少攻击）。Salt server使用端口4505和4506，必须打开端口才能接收到访问连接\n")])])]),a("p",[a("img",{attrs:{src:"https://yh-sun.github.io/note-cloud/1623226975171.png",alt:"Saltstack原理"}})]),t._v(" "),a("ul",[a("li",[t._v("（端口4505）所有Salt minions都需要建立一个持续连接到他们收听消息的发布者端口。命令是通过此端口异步发送给所有连接，这使命令可以在大量系统上同时执行。")]),t._v(" "),a("li",[t._v("Server （端口4506）Salt minios根据需要连接到请求服务器，将结果发送给Salt master，并安全地获取请求的文件或特定minion相关的数据值（称为Salt pillar）。连接到这个端口的连接在Salt master和Salt minion之间是1:1（不是异步）。")])]),t._v(" "),a("h2",{attrs:{id:"yum安装salt-master、salt-minion"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yum安装salt-master、salt-minion"}},[t._v("#")]),t._v(" yum安装salt-Master、salt-Minion")]),t._v(" "),a("ol",[a("li",[t._v("配置yum仓库")])]),t._v(" "),a("div",{staticClass:"language-crmsh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('# 使用阿里云yum\n[root@master ~]# yum -y install https://mirrors.aliyun.com/saltstack/yum/redhat/salt-repo-latest-2.el7.noarch.rpm\n[root@master ~]# sed -i "s/repo.saltstack.com/mirrors.aliyun.com\\/saltstack/g" /etc/yum.repos.d/salt-latest.repo\n# clean cache\n[root@master ~]# yum clean all\n[root@master ~]# yum makecache\n')])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("安装salt-Master")])]),t._v(" "),a("div",{staticClass:"language-crmsh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[root@master ~]# yum -y install salt-master\n# 设置开启自启，并启动salt-master\n[root@master ~]# systemctl enable salt-master\n[root@master ~]# systemctl start salt-master\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("安装salt-Minion")])]),t._v(" "),a("div",{staticClass:"language-crmsh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[root@minion ~]# yum -y install salt-minion\n\n# 指向salt-master网络地址，可以是主机名，也可以是IP地址；此处我们使用ip地址\n# 首先备份一下minion，语法详见<附录1>\n[root@minion ~]# cp /etc/salt/minion{,.back}\n# salt-master：master ip，也可以直接手动vim\n[root@minion ~]# sed -i '/#master: /c\\master: salt-master' /etc/salt/minion\n\n# 设置开启自启，并启动salt-minion\n[root@minion ~]# systemctl enable salt-master\n[root@minion ~]# systemctl start salt-master\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v("认证\n"),a("ol",[a("li",[t._v("未认证pki")])])])]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@master")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),t._v(" tree "),a("span",{pre:!0,attrs:{class:"token string regex"}},[t._v("/etc/")]),t._v("salt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pki\n"),a("span",{pre:!0,attrs:{class:"token string regex"}},[t._v("/etc/")]),t._v("salt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pki\n├── master\n│   ├── master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pem\n│   ├── master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pub\n│   ├── minions\n│   ├── minions_autosign\n│   ├── minions_denied\n│   ├── minions_pre\n│   │   └── VM"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("centos，为minion配置的主机名称\n│   └── minions_rejected\n└── minion\n")])])]),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@minion")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),t._v(" tree "),a("span",{pre:!0,attrs:{class:"token string regex"}},[t._v("/etc/")]),t._v("salt"),a("span",{pre:!0,attrs:{class:"token string regex"}},[t._v("/pki/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string regex"}},[t._v("/etc/")]),t._v("salt"),a("span",{pre:!0,attrs:{class:"token string regex"}},[t._v("/pki/")]),t._v("\n├── master\n└── minion\n    ├── minion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pem\n    └── minion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pub\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("已认证pki")])]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@master")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),t._v(" tree "),a("span",{pre:!0,attrs:{class:"token string regex"}},[t._v("/etc/")]),t._v("salt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pki\n"),a("span",{pre:!0,attrs:{class:"token string regex"}},[t._v("/etc/")]),t._v("salt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pki\n├── master\n│   ├── master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pem\n│   ├── master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pub\n│   ├── minions\n│   │   └── VM"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("centos，为minion配置的主机名称\n│   ├── minions_autosign\n│   ├── minions_denied\n│   ├── minions_pre\n│   └── minions_rejected\n└── minion\n")])])]),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@minion")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),t._v(" tree "),a("span",{pre:!0,attrs:{class:"token string regex"}},[t._v("/etc/")]),t._v("salt"),a("span",{pre:!0,attrs:{class:"token string regex"}},[t._v("/pki/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string regex"}},[t._v("/etc/")]),t._v("salt"),a("span",{pre:!0,attrs:{class:"token string regex"}},[t._v("/pki/")]),t._v("\n├── master\n└── minion\n    ├── minion_master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pub\n    ├── minion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pem\n    └── minion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pub\n")])])]),a("blockquote",[a("p",[t._v("以上两段对比可以看出，当认证通过时，master pki的minion将由minions_pre流转至minions，minion的pki将多出master的公钥Public Key")])]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("如何认证（salt-key）")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置master自动接受请求认证(master上配置 /etc/salt/master)，在master启动前就可配置，那就无需做认证的操作了")]),t._v("\nauto_accept: True\n")])])]),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当然，也可以手动接受指定的minion")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# salt-key -L ")]),t._v("\nAccepted Keys:        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#已经接受的key")]),t._v("\nDenied Keys:          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#拒绝的key")]),t._v("\nUnaccepted Keys:      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#未加入的key")]),t._v("\nRejected Keys:        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#吊销的key")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 常用参数")]),t._v("\n-L  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看KEY状态")]),t._v("\n-A  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#允许所有")]),t._v("\n-D  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删除所有")]),t._v("\n-a  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#认证指定的key")]),t._v("\n-d  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删除指定的key")]),t._v("\n-r  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#注销掉指定key（该状态为未被认证）")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加指定minion的key")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# salt-key -a salt-minion01 -y")]),t._v("\nThe following keys are going to be accepted:\nUnaccepted Keys:\nsalt-minion01\nKey "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" minion salt-minion01 accepted.\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#添加所有minion的key")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# salt-key -A -y")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 让我们看看认证通过的样子吧~")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# salt-key -L ")]),t._v("\nAccepted Keys:\nsalt-minion01\nDenied Keys:\nUnaccepted Keys:\nRejected Keys:\n")])])]),a("h2",{attrs:{id:"测试成果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试成果"}},[t._v("#")]),t._v(" 测试成果")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://yh-sun.github.io/note-cloud/1623392106256.png",alt:"salt-cp"}}),t._v("\n相信观众老爷们已经发现，文件大的无法salt-cp，修改/etc/salt/master,minion配置很多次，也无法成功。")]),t._v(" "),a("h2",{attrs:{id:"sls配置使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sls配置使用"}},[t._v("#")]),t._v(" sls配置使用")]),t._v(" "),a("h3",{attrs:{id:"定义环境目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义环境目录"}},[t._v("#")]),t._v(" 定义环境目录")]),t._v(" "),a("div",{staticClass:"language-dts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("file_roots:\n  base:\n    - /srv/salt/base\n  dev:\n    - /srv/salt/dev\n  prod:\n    - /srv/salt/prod\n")])])]),a("blockquote",[a("p",[t._v("初始情况下，是没有以上目录的，需要自己手动创建")])]),t._v(" "),a("div",{staticClass:"language-stylus extra-class"},[a("pre",{pre:!0,attrs:{class:"language-stylus"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("mkdir -p /srv/salt/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")])]),t._v("base,dev,prod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n# 重启master\n")])])]),a("h3",{attrs:{id:"sls"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sls"}},[t._v("#")]),t._v(" sls")]),t._v(" "),a("p",[t._v("本次演示以默认base环境为准，如果采用其他环境，如prod，只需执行sls时指定“saltenv=dev”")]),t._v(" "),a("div",{staticClass:"language-vim extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vim"}},[a("code",[t._v("# 创建sls脚本、资源文件夹"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("files")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("# "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("cd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("srv"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("salt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("base\n\n# 推送文件"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("file")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("managend"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("sls\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("# touch salt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("managend"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("sls\n~"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("test_salt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("file")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("managed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    # 如果不指定name，可以将那么的值声明在该命令块第一行\n    # "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ~"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("test_salt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("log\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("source")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" salt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("files")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("log\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" root\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" group"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" root\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("644")]),t._v("\n\t\n# 执行sls脚本\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("# salt "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),t._v(" state"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("sls salt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("managend"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("sls\n\n\n\n# 在目标服务器执行脚本"),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("smd")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("sls\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("# touch salt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("sls\ntest_sh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  cmd"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("source")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" salt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("files")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sh")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" root\n\t\n# 执行sls脚本\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("# salt "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),t._v(" state"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("sls salt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("sls\n")])])]),a("p",[a("img",{attrs:{src:"https://yh-sun.github.io/note-cloud/1623397272479.png",alt:"推送文件"}}),t._v(" "),a("img",{attrs:{src:"https://yh-sun.github.io/note-cloud/1623397295956.png",alt:"执行脚本"}})]),t._v(" "),a("h2",{attrs:{id:"附录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#附录"}},[t._v("#")]),t._v(" 附录")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("cp {,.back}语法\n"),a("img",{attrs:{src:"https://yh-sun.github.io/note-cloud/1623229247111.png",alt:"cp {,.back}语法"}})])]),t._v(" "),a("li",[a("p",[t._v("执行sls推送文件时，经常出现一次成功，一次失败，初步判断是由于握手失败，没有接到响应。后续查找具体方案（https://blog.csdn.net/u010842538/article/details/51702108）")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);